{"version":3,"sources":["../../../src/EverkineticParser/extractors/PageExtractor.js"],"names":["PageExtractor","totalPages","fetcher","PageDocumentFactory","pageDocumentFactory","url","console","log","pagePromises","i","push","fetch","then","output","Promise","all","values","map","get","$","extract","reduce","a","b","concat"],"mappings":";;;;;;;;;;IAAaA,a,WAAAA,a;AAET,2BAAYC,UAAZ,EAAwBC,OAAxB,EAAiCC,mBAAjC,EAAsD;AAAA;;AAClD,aAAKF,UAAL,GAAkBA,UAAlB;AACA,aAAKC,OAAL,GAAeA,OAAf;AACA,aAAKE,mBAAL,GAA2BD,mBAA3B;AACA,aAAKE,GAAL,GAAW,2BAAX;AACH;;;;kCAES;AAAA;;AACNC,oBAAQC,GAAR,CAAY,cAAZ,EAA4B,KAAKN,UAAjC;AACA;;AAEA,gBAAIO,eAAe,EAAnB;;AAJM,uCAKGC,CALH;AAMFD,6BAAaE,IAAb,CAAkB,MAAKR,OAAL,CAAaS,KAAb,CAAsB,MAAKN,GAA3B,cAAuCI,CAAvC,EAA4CG,IAA5C,CAAiD,kBAAQ;AACvEN,4BAAQC,GAAR,iBAA0BE,CAA1B;AACA,2BAAOI,MAAP;AACH,iBAHiB,CAAlB;AANE;;AAKN,iBAAK,IAAIJ,IAAI,CAAb,EAAgBA,KAAK,KAAKR,UAA1B,EAAsCQ,GAAtC,EAA2C;AAAA,sBAAlCA,CAAkC;AAK1C;;AAED,mBAAOK,QAAQC,GAAR,CAAYP,YAAZ,EACFI,IADE,CACG,UAACI,MAAD,EAAY;;AAEd,uBAAOA,OACFC,GADE,CACE;AAAA,2BAAK,MAAKb,mBAAL,CAAyBc,GAAzB,CAA6BC,CAA7B,EAAgCC,OAAhC,EAAL;AAAA,iBADF,EAEFC,MAFE,CAEK,UAACC,CAAD,EAAIC,CAAJ;AAAA,2BAAUD,EAAEE,MAAF,CAASD,CAAT,CAAV;AAAA,iBAFL,EAE4B,EAF5B,CAAP;AAGH,aANE,CAAP;AAOH","file":"PageExtractor.js","sourcesContent":["export class PageExtractor {\n\n    constructor(totalPages, fetcher, PageDocumentFactory) {\n        this.totalPages = totalPages;\n        this.fetcher = fetcher;\n        this.pageDocumentFactory = PageDocumentFactory;\n        this.url = 'http://db.everkinetic.com';\n    }\n\n    extract() {\n        console.log('totalPages: ', this.totalPages);\n        // this.totalPages = 3; //debug\n\n        let pagePromises = [];\n        for (let i = 1; i <= this.totalPages; i++) {\n            pagePromises.push(this.fetcher.fetch(`${this.url}/page/${i}`).then(output=>{\n                console.log(`fetch page ${i}`)\n                return output;\n            }));\n        }\n\n        return Promise.all(pagePromises)\n            .then((values) => {\n\n                return values\n                    .map($ => this.pageDocumentFactory.get($).extract())\n                    .reduce((a, b) => a.concat(b), []);\n            });\n    }\n\n}"]}